"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleRegistration = exports.determineSigningAlg = void 0;
function isValidUrl(url) {
    try {
        new URL(url);
        return true;
    }
    catch (_a) {
        return false;
    }
}
function determineSigningAlg(supported, preferred) {
    var _a;
    return ((_a = preferred.find((signingAlg) => {
        return supported.includes(signingAlg);
    })) !== null && _a !== void 0 ? _a : null);
}
exports.determineSigningAlg = determineSigningAlg;
async function handleRegistration(options, issuerConfig, storageUtility, clientRegistrar) {
    if (options.clientId === undefined ||
        (issuerConfig.solidOidcSupported !==
            "https://solidproject.org/TR/solid-oidc" &&
            isValidUrl(options.clientId))) {
        return clientRegistrar.getClient({
            sessionId: options.sessionId,
            clientName: options.clientName,
            redirectUrl: options.redirectUrl,
        }, issuerConfig);
    }
    await storageUtility.setForUser(options.sessionId, {
        clientId: options.clientId,
    });
    if (options.clientSecret) {
        await storageUtility.setForUser(options.sessionId, {
            clientSecret: options.clientSecret,
        });
    }
    if (options.clientName) {
        await storageUtility.setForUser(options.sessionId, {
            clientName: options.clientName,
        });
    }
    return {
        clientId: options.clientId,
        clientSecret: options.clientSecret,
        clientName: options.clientName,
    };
}
exports.handleRegistration = handleRegistration;
//# sourceMappingURL=IClientRegistrar.js.map