"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mockSessionInfoManager = exports.SessionInfoManagerMock = exports.SessionCreatorGetSessionResponse = exports.SessionCreatorCreateResponse = void 0;
const globals_1 = require("@jest/globals");
const SessionInfoManager_1 = require("../SessionInfoManager");
exports.SessionCreatorCreateResponse = {
    sessionId: "global",
    isLoggedIn: true,
    webId: "https://pod.com/profile/card#me",
    idToken: "test ID token",
};
exports.SessionCreatorGetSessionResponse = exports.SessionCreatorCreateResponse;
exports.SessionInfoManagerMock = {
    update: globals_1.jest.fn(async (_sessionId, _options) => { }),
    get: globals_1.jest.fn(async (_sessionId) => Promise.resolve(exports.SessionCreatorCreateResponse)),
    getAll: globals_1.jest.fn(async () => Promise.resolve([exports.SessionCreatorCreateResponse])),
    clear: globals_1.jest.fn(async (_sessionId) => Promise.resolve()),
    register: globals_1.jest.fn(async (_sessionId) => Promise.resolve()),
    clearAll: globals_1.jest.fn(async () => Promise.resolve()),
    getRegisteredSessionIdAll: globals_1.jest.fn(async () => Promise.resolve([])),
};
function mockSessionInfoManager(storageUtility) {
    return new SessionInfoManager_1.SessionInfoManager(storageUtility);
}
exports.mockSessionInfoManager = mockSessionInfoManager;
//# sourceMappingURL=SessionInfoManager.js.map